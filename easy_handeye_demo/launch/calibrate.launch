<launch>
    <!-- you can write your own calibrate.launch, by including the ROS drivers for robot and tracking and choosing
    your own namespace if you have multiple tracking devices or robots -->

    <arg name="start_simulator" default="true" doc="Start a simulated tracking system with a trivial noise model" />

    <arg name="namespace_prefix" default="demo_handeyecalibration" />
    <arg name="eye_on_hand" default="false" />

    <arg name="move_group_namespace" value="/abb" />
    <arg name="move_group" value="manipulator" />
    <arg name="robot_base_frame" value="dummy" />
    <arg name="robot_effector_frame" value="tool0" />
    <arg name="tracking_base_frame" value="tracking_origin" />
    <arg name="tracking_marker_frame" value="tracking_marker" />
    <arg name="freehand_robot_movement" default="false" />

    <!-- start the robot -->
    <include unless="$(arg freehand_robot_movement)" file="$(find abb_irb120_moveit_config)/launch/moveit_planning_execution.launch">
        <!-- <arg name="rviz" value="false" /> -->
    </include>
    <node if="$(arg freehand_robot_movement)" name="dummy_robot" pkg="tf" type="static_transform_publisher"
          args="1 1 1 0 1.5 0 $(arg robot_base_frame) $(arg robot_effector_frame) 10" />

    <!-- start the simulated tracking -->
    <node name="tracking_simulator" pkg="easy_handeye_demo" type="tracking_simulator.py" output="screen">
        <!-- tracking simulation frequency and noise parameters -->
        <param name="frequency" value="10" />
        <param name="translation_noise_stdev" value="0.001" />
        <param name="rotation_noise_stdev" value="0.0001" />

        <param name="eye_on_hand" value="$(arg eye_on_hand)" /> 
        <!-- transformations for the eye-on-base case -->
        <param unless="$(arg eye_on_hand)" name="ground_truth_calibration_transformation" value="-0.01 0 0 0 0.707 0 0.707" />
        <param unless="$(arg eye_on_hand)" name="arbitrary_marker_placement_transformation" value="0.325 -1 -0.651 0 0.035 0 0.999" />
        <!-- transformations for the eye-on-hand case -->
        <param if="$(arg eye_on_hand)" name="ground_truth_calibration_transformation" value="0.12 0.21 0.137 0 0 0 1" />
        <param if="$(arg eye_on_hand)" name="arbitrary_marker_placement_transformation" value="2 0 0.5 0 0 0 1" />

        <param name="tracking_base_frame" value="$(arg tracking_base_frame)" />
        <param name="tracking_marker_frame" value="$(arg tracking_marker_frame)" />
        <param name="robot_base_frame" value="$(arg robot_base_frame)" />
        <param name="robot_effector_frame" value="$(arg robot_effector_frame)" />

        <!-- simulated tracking noise parameters -->
        <param name="frequency" value="10" />
        <param name="translation_noise_stdev" value="0.0001" />
        <param name="rotation_noise_stdev" value="0.00001" />
    </node>

    <!-- start easy_handeye calibration procedure -->
    <include file="$(find easy_handeye)/launch/calibrate.launch" >
        <arg name="start_rviz" value="false" />

        <arg name="namespace_prefix" value="$(arg namespace_prefix)" />
        <arg name="move_group_namespace" value="$(arg move_group_namespace)" />
        <arg name="move_group" value="$(arg move_group)" />

        <arg name="eye_on_hand" value="$(arg eye_on_hand)" />
        <arg name="tracking_base_frame" value="$(arg tracking_base_frame)" />
        <arg name="tracking_marker_frame" value="$(arg tracking_marker_frame)" />
        <arg name="robot_base_frame" value="$(arg robot_base_frame)" />
        <arg name="robot_effector_frame" value="$(arg robot_effector_frame)" />

        <arg name="freehand_robot_movement" value="$(arg freehand_robot_movement)" />
        <arg name="robot_velocity_scaling" value="0.5" />
        <arg name="robot_acceleration_scaling" value="0.2" />
    </include>

    <!-- start rviz with custom configuration -->
    <node ns="/abb" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="true"
          args="-d $(find easy_handeye_demo)/launch/moveit_planning_execution.launch" output="screen" />
</launch>
